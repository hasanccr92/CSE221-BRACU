# -*- coding: utf-8 -*-
"""Task-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10Hl-yPdpPWgF3_TeFy_rhYRQKybIQpYN
"""

#-----------------TASK-1--------------------

file1 = open('bubble.txt',mode = 'r')

n = file1.readline()
arr1 = []
arr1 = file1.readline().split()
arr = []
for i in arr1:
    arr.append(int(i))


def bubbleSort(arr):
    file2 = open('bubbleoutput.txt',mode= 'w')
    count = 0
    for i in range(len(arr)-1):
        flag = False
        
        for j in range(len(arr)-1):
            if arr[j] > arr[j+1]:
                temp = arr[j]
                arr[j] = arr[j+1]
                arr[j+1] = temp
                flag = True
                count += 1

        if flag is False:
            count += 1
            break
    #print('Loop count: ',count)
    for i in arr:
        file2.write(str(i)+' ')
    file2.close() 
    

file1.close()

bubbleSort(arr)

'''EXPLANATION-
After the first loop, if we check that the swapping flag is false,
we understand that no swapping is required, thus, the array is already sorted.
Then we need not go to the inner loop to swap, making it O(n) complexity under the best case input.
If swapping is needed, then it will go to the inner loop and mane the complexity O(n^2)'''