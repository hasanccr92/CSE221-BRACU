# -*- coding: utf-8 -*-
"""task-1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1otnQg8J0BGgX6bC1SpzdJrFF2xyWjyUr
"""

#--------------TASK-1----------------#
from queue import PriorityQueue
import math

file1 = open('Task1In.txt',mode = 'r')
file2 = open("Task1Out.txt", mode = "w")

graph = {}
path = []

def Dijkstra(source, dest):
    
    dist = [math.inf] * (dest+1)
    dist[source] = 0
    visited = [0] * (dest+1)
    pq = PriorityQueue()
    pq.put((dist[source],source))

    while pq.empty() != True:
        u = pq.get()[source] 
        if u not in visited:
            visited[u] = 1
            eg = graph[u]
            if eg != None:
                for i in eg:
                    v = i[0]
                    alt = dist[u]+i[1]
                    if alt < dist[v]:
                        dist[v] = alt
                        pq.put((dist[v],v))
    
    return str(dist[dest])+'\n'




for i in range(int(file1.readline())):
    N, M = map(int, file1.readline().split())
    adj = [[] for x in range(N+1)]
    for j in range(M):
        u, v, w = map(int, file1.readline().split())
        adj[u].append((v, w))
    for i in range(N):
        graph[i] = adj[i]
    graph[N] = None
    minDistance = Dijkstra(1, N)
    file2.write(minDistance)
    graph.clear()
    path.clear()



file1.close()
file2.close()

